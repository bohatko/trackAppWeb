name: Flutter Web CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "lib/**"

jobs:
  build_web:
    name: Build Flutter (Web)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2 
        with:
          channel: 'stable'
          
      - name: Cache Pub dependencies 
        uses: actions/cache@v3
        with:
          path: $HOME/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-
      
      - name: Get Pub dependencies
        run: flutter pub get

      - name: Enable Web
        run: flutter config --enable-web

      - name: Build Flutter Web App
        run: flutter build web --release 

      - name: Upload production artifact
        uses: actions/upload-artifact@v4 
        with:
          name: web-build
          path: build/web

  deploy:
    needs: build_web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 
      
      - name: Download production artifact
        uses: actions/download-artifact@v4 
        with:
          name: web-build
          path: build/web

      - name: Install Google Cloud SDK
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk

      - name: Authenticate gcloud
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > sa.json
          gcloud auth activate-service-account --key-file=sa.json
          gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Set CORS for Firebase Storage
        run: |
          echo '[
            {
              "origin": [
                "https://track-app-uxjczg.web.app",
                "http://localhost:5000"
              ],
              "method": ["GET", "HEAD", "OPTIONS"],
              "maxAgeSeconds": 3600,
              "responseHeader": ["Content-Type", "x-goog-meta-*"]
            }
          ]' > cors.json
          gsutil cors set cors.json gs://track-app-uxjczg.appspot.com

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          channelId: live
